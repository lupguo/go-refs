// Code generated by MockGen. DO NOT EDIT.
// Source: apollocfg.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIApolloCfg is a mock of IApolloCfg interface.
type MockIApolloCfg struct {
	ctrl     *gomock.Controller
	recorder *MockIApolloCfgMockRecorder
}

// MockIApolloCfgMockRecorder is the mock recorder for MockIApolloCfg.
type MockIApolloCfgMockRecorder struct {
	mock *MockIApolloCfg
}

// NewMockIApolloCfg creates a new mock instance.
func NewMockIApolloCfg(ctrl *gomock.Controller) *MockIApolloCfg {
	mock := &MockIApolloCfg{ctrl: ctrl}
	mock.recorder = &MockIApolloCfgMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIApolloCfg) EXPECT() *MockIApolloCfgMockRecorder {
	return m.recorder
}

// GetString mocks base method.
func (m *MockIApolloCfg) GetString(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetString", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetString indicates an expected call of GetString.
func (mr *MockIApolloCfgMockRecorder) GetString(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetString", reflect.TypeOf((*MockIApolloCfg)(nil).GetString), key)
}
